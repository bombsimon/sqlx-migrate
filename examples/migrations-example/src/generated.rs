pub use sqlx_migrate :: prelude :: * ; # [allow (dead_code)] # [doc = "Created at 20211215161742."] pub mod _1_initial_migration_migrate { } # [allow (dead_code)] # [doc = "Created at 20211215161742."] pub mod _1_initial_migration_revert { } # [allow (dead_code)] # [path = "/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215162220_plush_sharks.migrate.rs"] # [doc = "Created at 20211215162220."] pub mod _2_plush_sharks_migrate ; # [doc (inline)] pub use _2_plush_sharks_migrate :: * ; # [allow (dead_code)] # [path = "/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215162220_plush_sharks.revert.rs"] # [doc = "Created at 20211215162220."] pub mod _2_plush_sharks_revert ; # [doc (inline)] pub use _2_plush_sharks_revert :: * ; # [doc = r" All the migrations."] pub fn migrations () -> impl IntoIterator < Item = Migration < sqlx :: Postgres >> { [sqlx_migrate :: Migration :: new ("initial_migration" , | tx | std :: boxed :: Box :: pin (async move { use sqlx :: Executor ; let tx : & mut sqlx :: Transaction < sqlx :: Postgres > = tx ; tx . execute (include_str ! ("/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215161742_initial_migration.migrate.sql")) . await ? ; Ok (()) })) . with_checksum (b"L\xFEk\xBE\x94\xF6(\xB7$+\xCEMNR\x18t\xBF\xF08\xFE\xE0\x98p+\x81_R\x12\xFF\x9C\x04\xF3" . as_slice ()) . reversible (| tx | std :: boxed :: Box :: pin (async move { use sqlx :: Executor ; let tx : & mut sqlx :: Transaction < sqlx :: Postgres > = tx ; tx . execute (include_str ! ("/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215161742_initial_migration.revert.sql")) . await ? ; Ok (()) })) , sqlx_migrate :: Migration :: new ("plush_sharks" , | tx | std :: boxed :: Box :: pin (async move { # [path = "/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215162220_plush_sharks.migrate.rs"] mod plush_sharks ; plush_sharks :: plush_sharks (tx) . await ? ; Ok (()) })) . with_checksum (b"\xD9\xFF\xDF\xED\x03\x99\xFD\xD77Z\xDB\xF2\x93\xCC\xC1c\xC9\x95\x86\xD1\xA3\xCDU\xC6\x16h\r\xB9\x89%\xEA\xE1" . as_slice ()) . reversible (| tx | std :: boxed :: Box :: pin (async move { # [path = "/home/tamasfe/work/opensauce/sqlx-migrations/examples/migrations-example/migrations/20211215162220_plush_sharks.revert.rs"] mod revert_plush_sharks ; revert_plush_sharks :: revert_plush_sharks (tx) . await ? ; Ok (()) })) ,] }